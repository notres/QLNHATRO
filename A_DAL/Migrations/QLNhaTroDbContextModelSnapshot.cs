// <auto-generated />
using System;
using A_DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace A_DAL.Migrations
{
    [DbContext(typeof(QLNhaTroDbContext))]
    partial class QLNhaTroDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("A_DAL.Models.ChuTro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Diachi")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DiaChi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Password");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SDT");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(47)")
                        .HasColumnName("Ten");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("ChuTro", (string)null);
                });

            modelBuilder.Entity("A_DAL.Models.CTHopDong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DichVuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HopDongId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PhongTroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DichVuId");

                    b.HasIndex("HopDongId");

                    b.HasIndex("PhongTroId");

                    b.ToTable("CTHopDong", (string)null);
                });

            modelBuilder.Entity("A_DAL.Models.DichVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChuTroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DonGia")
                        .HasColumnType("float")
                        .HasColumnName("DonGia");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Ten");

                    b.HasKey("Id");

                    b.HasIndex("ChuTroId");

                    b.ToTable("DichVu", (string)null);
                });

            modelBuilder.Entity("A_DAL.Models.HopDong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChuTroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaHopDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MaHopDong");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("Datetime")
                        .HasColumnName("NgayTao");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("Datetime")
                        .HasColumnName("NgayThanhToan");

                    b.Property<double>("TongTien")
                        .HasColumnType("float")
                        .HasColumnName("TongTien");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("TrangThai");

                    b.HasKey("Id");

                    b.HasIndex("ChuTroId");

                    b.ToTable("HopDong", (string)null);
                });

            modelBuilder.Entity("A_DAL.Models.KhachHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CMND")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("CMND");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Email");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int")
                        .HasColumnName("GioiTinh");

                    b.Property<Guid>("HopDongId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Quequan")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("QueQuan");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("SDT");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(47)")
                        .HasColumnName("Ten");

                    b.HasKey("Id");

                    b.HasIndex("HopDongId");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("A_DAL.Models.PhongTro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChuTroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("DiaChi");

                    b.Property<double>("DienTich")
                        .HasColumnType("float")
                        .HasColumnName("DienTich");

                    b.Property<double>("DonGiaPhong")
                        .HasColumnType("float")
                        .HasColumnName("DonGiaPhong");

                    b.Property<string>("MaPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MaPhong");

                    b.Property<int>("SoNguoi")
                        .HasColumnType("int")
                        .HasColumnName("SoNguoi");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int")
                        .HasColumnName("TrangThai");

                    b.HasKey("Id");

                    b.HasIndex("ChuTroId");

                    b.ToTable("PhongTro", (string)null);
                });

            modelBuilder.Entity("A_DAL.Models.CTHopDong", b =>
                {
                    b.HasOne("A_DAL.Models.DichVu", "DichVu")
                        .WithMany()
                        .HasForeignKey("DichVuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("A_DAL.Models.HopDong", "HopDong")
                        .WithMany()
                        .HasForeignKey("HopDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("A_DAL.Models.PhongTro", "PhongTro")
                        .WithMany()
                        .HasForeignKey("PhongTroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DichVu");

                    b.Navigation("HopDong");

                    b.Navigation("PhongTro");
                });

            modelBuilder.Entity("A_DAL.Models.DichVu", b =>
                {
                    b.HasOne("A_DAL.Models.ChuTro", "ChuTro")
                        .WithMany()
                        .HasForeignKey("ChuTroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuTro");
                });

            modelBuilder.Entity("A_DAL.Models.HopDong", b =>
                {
                    b.HasOne("A_DAL.Models.ChuTro", "ChuTro")
                        .WithMany()
                        .HasForeignKey("ChuTroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuTro");
                });

            modelBuilder.Entity("A_DAL.Models.KhachHang", b =>
                {
                    b.HasOne("A_DAL.Models.HopDong", "HopDong")
                        .WithMany()
                        .HasForeignKey("HopDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HopDong");
                });

            modelBuilder.Entity("A_DAL.Models.PhongTro", b =>
                {
                    b.HasOne("A_DAL.Models.ChuTro", "ChuTro")
                        .WithMany()
                        .HasForeignKey("ChuTroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuTro");
                });
#pragma warning restore 612, 618
        }
    }
}
